pipeline {
    agent any 
    
    tools {
        jdk 'jdk17'
        maven 'maven3'
    }
    
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
        GITHUB_TOKEN = credentials('github-token') // Ensure to store your GitHub token securely in Jenkins
    }
    
    stages {
        
        stage("Git Checkout") {
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/nishankkoul/SonarQube-Integration.git'
            }
        }
        
        stage("Compile") {
            steps {
                sh "mvn clean compile"
            }
        }

        stage("Test Cases") {
            steps {
                sh "mvn test"
            }
        }
        
        stage("SonarQube Analysis") {
            environment {
                SONAR_URL = "https://sonar.bimaplan.co/" // Change this value depending on your VM's IP address
            }
            steps {
                withSonarQubeEnv('sonar-server') {
                    sh '''$SCANNER_HOME/bin/sonar-scanner \
                    -Dsonar.projectName=SonarQube-Integration \
                    -Dsonar.java.binaries=. \
                    -Dsonar.projectKey=nishankkoul_SonarQube-Integration_666b06b4-e5b6-426e-8184-54e9b1a8da33 \
                    -Dsonar.login=${SONAR_AUTH_TOKEN} \
                    -Dsonar.host.url=${SONAR_URL}'''
                }
            }
        }

        stage("Post SonarQube Results to GitHub") {
            steps {
                script {
                    // Assuming you can extract issues and summary from the SonarQube analysis results
                    // You may need to parse the results file generated by SonarQube or use the API to get issues
                    
                    // For the purpose of this example, using placeholder variables
                    def sonarSummary = "Summary of SonarQube Analysis" // Replace with actual summary extraction
                    def sonarIssues = "Issues found: ..." // Replace with actual issue extraction

                    // Post results to GitHub Checks API
                    def githubCheckResponse = sh(script: '''
                        curl -X POST \
                        -H "Authorization: token ${GITHUB_TOKEN}" \
                        -H "Accept: application/vnd.github.v3+json" \
                        https://api.github.com/repos/nishankkoul/SonarQube-Integration/check-runs \
                        -d '{
                            "name": "SonarQube Scan",
                            "head_sha": "${env.GITHUB_SHA}", // Current commit SHA
                            "status": "completed",
                            "conclusion": "success", // Set this based on SonarQube issues
                            "output": {
                                "title": "SonarQube Scan Results",
                                "summary": "${sonarSummary}",
                                "text": "${sonarIssues}"
                            }
                        }'
                    ''', returnStdout: true)

                    // You may want to handle the response here
                    echo "GitHub Check Response: ${githubCheckResponse}"
                }
            }
        }
    }
}
